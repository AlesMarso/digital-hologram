РАЗРАБОТКА ПРОГРАММНОГО МОДУЛЯ ДЛЯ ДЕКОДИРОВАНИЯ ЦИФРОВЫХ ГОЛОГРАММ

А.Е. Потапов,
Новосибирский государственный технический университет,
г. Новосибирск, a.potapov.2017@stud.nstu.ru
Научный руководитель: А.Б. Колкер, кандидат технический наук, доцент

В статье рассматривается разработка программного модуля для реализации алгоритма декодирования цифровых голограмм в реальном времени. Данный модуль будет использоваться в экспериментальной установке, предназначенной для исследования голографии. Основной особенностью разрабатываемого модуля является использование графического процессора для реализации алгоритма пошагового фазового сдвига - PSI и преобразования Френеля.
The article discusses the development of a software module for the implementation of the algorithm for decoding digital holograms in real time. This module will be used in an experimental setup designed to research holography. The main feature of the developed module is the use of a graphics processor to implement the step-by-step phase shift algorithm - PSI and Fresnel transform. 

Введение. Голография – это метод регистрации произвольного колебательного процесса, позволяющий зафиксировать как амплитуду, так и фазу колебания, а затем воспроизвести их в любой удобный момент времени [1].
Основной особенностью цифровой голографии является то, что анализ, синтез и математическое преобразование происходит за счет средств вычислительной техники. Но для качественного проведения анализа цифровых голограмм необходимо обрабатывать большое количество цифровых голограмм за короткий промежуток времени.
Цель данной работы заключается в разработке программного модуля для декодирования цифровых голограмм с использованием графического процессора. 
Актуальность работы заключается в том, что данный программный модуль позволяет производить декодирование цифровых голограмм в реальном времени. 
Новизна заключается разработке алгоритма декодирования цифровых голограмм на основе метода пошагового фазового сдвига (PSI) и преобразования Френеля, все математические операции производятся на графическом процессоре.
Описание алгоритмов декодирования цифровых голограмм. Первым этапом декодирования цифровых голограмм является определение значений амплитуды и фазы по картинам интенсивности, полученные на этапе регистрации цифровой голограммы. Для этого этапа используется алгоритм пошагового фазового сдвига — PSI [2]. Его формула представлена ниже.

При помощи формулы 1 можно получить математическую модуль голограммы вида:

где



Следующим этапом является дискретное преобразование Френеля, его формула представлена ниже. Данное преобразование позволяет приближать цифровую голограмму на расстояние d [1].


Реализация программного модуля. Так как картины интенсивности представлены в виде изображений, то в разрабатываемом приложении используется технология универсальных вычислений на графических процессорах (GPGPU) — это использование графического процессора (GPU), для выполнения вычислений в приложениях, которые традиционно обрабатываются центральный процессор (CPU). Основным преимуществом данной технологии является архитектура графического процессора, нацеленная  на увеличение производительности вычислений за счет большего параллелизма выполнения инструкций. Поэтому при выполнении математических операций метода пошагового фазового сдвига (PSI) и преобразования Френеля в графическом процессоре удается значительно повысить скорость декодирования цифровых голограмм.
Основным языком программирования выбран C++. В качестве графического процесса декодирования цифровых голограмм используется видеокарта Nvidia GeForce GTX 1070. Для управления графическим процессором используется графическая библиотека OpenGL. Основным достоинством этой библиотеки является простой программный интерфейс взаимодействия (API) и поддержка большого числа графических процессоров и операционных систем. Графическая библиотека OpenGL позволяет реализовывать программы для фрагментарного и вычислительного шейдеров. Последний никак не участвует в процессе графического конвейера и реализует технологию GPGPU и используется для вычисления произвольной информации.
Вычислительный шейдер выполняется над рабочим пространством или вычислительным пространством (compute space). Под этим термином понимается область памяти, с которой работает программа вычислительного шейдера. В данной работе под рабочее пространство составляет изображения, полученные на первом этапе, и целевое изображение, в которое записывается результат второго этапа. Рабочее пространство обрабатывается при помощи рабочих групп (work group) – наименьшее количество вычислительный операции, которые может выполнять пользователь [3]. Каждая рабочая группа состоит из нитей (поток в терминах OpenGL), которые и производит сами вычисления, параллельно с остальными нитями одной и той же группы.
Первый этап декодирования цифровых голограмм, описанный в предыдущем пункте, реализуется за счет фрагментарного шейдера. В память графического процессора записываются 4 изображения, полученные на этапе регистрации картин интенсивности.
Затем эти изображения преобразуются по алгоритму PSI (формула 1) в амплитудную и фазовую составляющие, которые записываются в отдельные текстурные объекты в памяти графического процессора. 	
Вторым этапом является преобразование Френеля. В основе данного преобразования лежит обычное двумерное быстрое преобразование Фурье или двумерное БПФ для четного количества точек. Выбор того или иного БПФ зависит от размеров изображений, полученных на первом этапе. Если ширина или высота не являются степенями 2, то будет использоваться двумерное БПФ для четного количества точек. Его реализация происходит в вычислительном шейдере (compute shader). Согласно формуле 5 данный этап можно разделить на три шага. 
    1. Умножение на экспоненту;
    2. Обычное двумерное БПФ или двумерное БПФ с четным количеством точек;
    3. Умножение на экспоненту. 
Двумерное БПФ выполняется над полученными ранее амплитудными и фазовыми составляющими. Исходные изображения делятся на 4 рабочие группы по оси y в терминах использования вычислительного шейдера OpenGL. В каждой группе используется 1024 параллельно работающие нити (потоки в терминах вершинного шейдера). Каждая нить реализует используемый алгоритм БПФ над строками исходных матриц амплитуды и фазы, полученные на первом этапе. После этого происходит аналогичная операция, но уже над столбцами.
 Заключение. В результате были разработаны алгоритмы регистрации и восстановления цифровых голограмм на основе C++ и OpenGL. С++ используется для управления. Основные вычислительные операции реализуются на графическом процессоре с помощью OpenGL.
Реализован метод получения цифровых математических голограмм с использованием метода фазовых сдвигов и метод преобразования Френеля на графическом ускорителе NVIDIA GTX 1070. 
Время восстановления изображения из четырех голограмм менее секунды при размере голограмм 6000x4000 пикселей при использовании графического ускорителя NVIDIA GTX 1070. Время расшифровки на компьютере около 5 минут.

Литература:
    1. Гужов В.И. Компьютерная голография: монография. Новосибирск: Изд-во НГТУ, 2018. – 270 с
    2. В. И. Гужов, С. П. Ильиных, С. В. Хайбуллин. Восстановление фазовой информации на основе методов пошагового фазового сдвига при малых углах между интерферирующими пучками // Автометрия. - 2017.  - Т. 53, № 3. - С. 101 — 106. 
    3. The OpenGL® Graphics System:A Specification (Version 4.6 (Core Profile) - May 5, 2022 [Электронный ресурс].Режим доступа- https://registry.khronos.org/OpenGL/specs/gl/glspec46.core.pdf, (дата обращения 30.10.2022).